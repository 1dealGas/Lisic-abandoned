[gd_scene load_steps=35 format=3 uid="uid://dj83r8165abo"]

[ext_resource type="PackedScene" uid="uid://dyvjy6kn3wxed" path="res://ui/notes/lisic_note.tscn" id="1_6rjc2"]
[ext_resource type="PackedScene" uid="uid://bhehs6cqly7fq" path="res://ui/light/lisic_light.tscn" id="2_fj2m2"]
[ext_resource type="Texture2D" uid="uid://db21vto6wrumq" path="res://ui/light/ideal_30.png" id="8_h0pvs"]
[ext_resource type="FontFile" uid="uid://b2p432ea4pc5o" path="res://include/OPPOSans-R.ttf" id="8_nhr8l"]
[ext_resource type="Texture2D" uid="uid://dcspxgg02hak3" path="res://ui/notes/lisic_l.png" id="8_xntdr"]
[ext_resource type="Texture2D" uid="uid://civtxa8rmw1vx" path="res://ui/light/ideal.png" id="9_1jlk0"]
[ext_resource type="Texture2D" uid="uid://cwvky0yhq5p1n" path="res://ui/notes/lisic_r.png" id="9_o4qdq"]
[ext_resource type="Shader" path="res://include/corner_radius.gdshader" id="9_sq2y1"]
[ext_resource type="Texture2D" uid="uid://chp2im7ecete" path="res://ui/light/good_early.png" id="10_ey0dw"]
[ext_resource type="FontFile" uid="uid://c3d0bqdl7tmsh" path="res://include/JetBrainsMonoNL-Regular.ttf" id="10_sn88k"]
[ext_resource type="Texture2D" uid="uid://xftevwd0vtma" path="res://ui/light/good_late.png" id="11_ckssv"]
[ext_resource type="Texture2D" uid="uid://ts0rxcf1rai4" path="res://ui/notes/lisic_tap.png" id="11_jkv75"]
[ext_resource type="Texture2D" uid="uid://d0j0mirwuus3d" path="res://ui/light/miss_early.png" id="12_ksq1k"]
[ext_resource type="Texture2D" uid="uid://s6rk4eft5gy5" path="res://ui/notes/lisic_catch.png" id="12_lnvwq"]
[ext_resource type="Texture2D" uid="uid://b42aukvjgg5sb" path="res://ui/notes/lisic_ltap.png" id="13_c5ic0"]
[ext_resource type="Texture2D" uid="uid://bp17c43u1tkgv" path="res://ui/notes/lisic_lcatch.png" id="14_rbbgr"]
[ext_resource type="Texture2D" uid="uid://c5nxun43bv8jv" path="res://ui/notes/lisic_rtap.png" id="15_du4rs"]
[ext_resource type="Script" path="res://include/button_to_tsb.gd" id="16_0bk3r"]
[ext_resource type="Texture2D" uid="uid://dnamvjue175c4" path="res://ui/notes/lisic_rcatch.png" id="16_bf8mi"]

[sub_resource type="GDScript" id="GDScript_0xc23"]
resource_name = "Lisic"
script/source = "extends Node

# 初始变量
var IOC:float  #屏幕中心x值
var length:float  #长度信息
var length_m:int  #分钟数
var length_s:int  #秒钟数
@export var speed:float = 2.25  #视觉倍速
@export var LisicNote:PackedScene
@export var LisicLight:PackedScene
var terminated:bool = false

# 谱面、判定变量
var fumen:Dictionary  #谱面内容
var tempos_expand:Array = []  #DTime表。每行为「起点、终点、DTime系数、DTime基数」
var init_time:float  #记录开始时间
var current_time:float  #记录当前时间
var judge_block:Array = []  #Tap判定锁

#判定器日志
var judge_log:Dictionary = {
	0 : {},
	1 : {},
	2 : {},
	3 : {},
	4 : {},
	5 : {}
}

# Combo、得分变量
var score:int = 0  #当前得分
var current_combo:int = 0  #当前Combo
var max_combo:int = 0  #记录最大Combo
var ideal_count:int = 0  #ideal计数器
var good_count:int = 0  #Good计数器
var miss_count:int = 0  #Miss计数器

# 判定常量
const ideal30:int = 30
const ideal_tap:int = 60
const ideal:int = 80
const good:int = 120
const miss:int = 160

# 判定更新流程：
#	board_update()，要求call_deferred
#	更新判定器日志
#	从实例化字典擦除键

# 实例化
@export var smart_instantiating:bool = true
@export_range(1,5) var instance_ratio:int = 1  #智能实例化倍率
var phy:int = 50  #实例化物理帧间隔
var ins_step:int = 2000  #每次实例化长度
var ins_ticks:int = 0
var ins:Dictionary = {
	\"Taps\" = {},
	\"Catches\" = {},
	\"LTaps\" = {},
	\"LCatches\" = {},
	\"RTaps\" = {},
	\"RCatches\" = {}
}
func fumen_instantiate(init_ms_time:int):

	for note in fumen[\"Catches\"].keys():
		if fumen[\"Catches\"][note][0] < init_ms_time: continue
		elif fumen[\"Catches\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"Catches\"][note] = fumen[\"Catches\"][note]
		fumen[\"Catches\"].erase(note)
		ins[\"Catches\"][note].append( LisicNote.instantiate() )
		$DownSide.add_child( ins[\"Catches\"][note][3] )
		ins[\"Catches\"][note][3].init( get_dtime(ins[\"Catches\"][note][0]) , ins[\"Catches\"][note][1], true)

	for note in fumen[\"Taps\"].keys():
		if fumen[\"Taps\"][note][0] < init_ms_time: continue
		elif fumen[\"Taps\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"Taps\"][note] = fumen[\"Taps\"][note]
		fumen[\"Taps\"].erase(note)
		ins[\"Taps\"][note].append( LisicNote.instantiate() )
		$DownSide.add_child( ins[\"Taps\"][note][3] )
		ins[\"Taps\"][note][3].init( get_dtime(ins[\"Taps\"][note][0]) , ins[\"Taps\"][note][1], false)

	for note in fumen[\"LCatches\"].keys():
		if fumen[\"LCatches\"][note][0] < init_ms_time: continue
		elif fumen[\"LCatches\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"LCatches\"][note] = fumen[\"LCatches\"][note]
		fumen[\"LCatches\"].erase(note)
		ins[\"LCatches\"][note].append( LisicNote.instantiate() )
		$LSide.add_child( ins[\"LCatches\"][note][2] )
		ins[\"LCatches\"][note][2].init( get_dtime(ins[\"LCatches\"][note][0]) , -1, true)

	for note in fumen[\"LTaps\"].keys():
		if fumen[\"LTaps\"][note][0] < init_ms_time: continue
		elif fumen[\"LTaps\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"LTaps\"][note] = fumen[\"LTaps\"][note]
		fumen[\"LTaps\"].erase(note)
		ins[\"LTaps\"][note].append( LisicNote.instantiate() )
		$LSide.add_child( ins[\"LTaps\"][note][2] )
		ins[\"LTaps\"][note][2].init( get_dtime(ins[\"LTaps\"][note][0]) , -1, false)

	for note in fumen[\"RCatches\"].keys():
		if fumen[\"RCatches\"][note][0] < init_ms_time: continue
		elif fumen[\"RCatches\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"RCatches\"][note] = fumen[\"RCatches\"][note]
		fumen[\"RCatches\"].erase(note)
		ins[\"RCatches\"][note].append( LisicNote.instantiate() )
		$RSide.add_child( ins[\"RCatches\"][note][2] )
		ins[\"RCatches\"][note][2].init( get_dtime(ins[\"RCatches\"][note][0]) , 11, true)

	for note in fumen[\"RTaps\"].keys():
		if fumen[\"RTaps\"][note][0] < init_ms_time: continue
		elif fumen[\"RTaps\"][note][0] >= init_ms_time + ins_step: continue
		ins[\"RTaps\"][note] = fumen[\"RTaps\"][note]
		fumen[\"RTaps\"].erase(note)
		ins[\"RTaps\"][note].append( LisicNote.instantiate() )
		$RSide.add_child( ins[\"RTaps\"][note][2] )
		ins[\"RTaps\"][note][2].init( get_dtime(ins[\"RTaps\"][note][0]) , 11, false)





######## JUDGE ########




var f_current:float = 0
func fumen_detect(fumen_part:Dictionary, which:int, catch_hit:bool=false):

	for note in fumen_part.keys():

		# 公有判定
		if not note in fumen_part: continue
		if f_current - fumen_part[note][0] > good:
			call_deferred(\"board_update\", fumen_part[note].pop_back(), MODE.MISS_LATE, 0)
			judge_log[which][note] = fumen_part[note].append_array( [\"MISS_LATE\", miss ] )
			fumen_part.erase(note)

		# Catch专有判定
		if not note in fumen_part: continue
		if catch_hit:

			var delta_time:float = f_current - fumen_part[note][0]

			var current_note_pos:int
			if which==1: current_note_pos = fumen_part[note][1]
			else: current_note_pos = 0

			if which==1 and delta_time > ideal:
				call_deferred(\"board_update\", fumen_part[note].pop_back(), MODE.GOOD_LATE, current_note_pos)
				judge_log[which][note] = fumen_part[note].append_array( [\"GOOD_LATE\", good ] )
				fumen_part.erase(note)
			elif delta_time >= -ideal and delta_time <= ideal:
				call_deferred(\"board_update\", fumen_part[note].pop_back(), MODE.IDEAL30, current_note_pos)
				judge_log[which][note] = fumen_part[note].append_array( [\"IDEAL\", 0 ] )
				fumen_part.erase(note)

var fl_current:float = 0
var fr_current:float = 0
func fumen_detect_tap_lr(fumen_part:Dictionary, which:int, min_ms_time:int):
	# LTap: which=2
	# RTap: which=4

	@warning_ignore(narrowing_conversion)
	if which==2:
		fl_current = ( Time.get_ticks_usec() - init_time - 1000000*AudioServer.get_output_latency() ) / 1000
	elif which==4:
		fr_current = ( Time.get_ticks_usec() - init_time - 1000000*AudioServer.get_output_latency() ) / 1000

	for note in fumen_part.keys():

		# 保证只有最早的Note被判定
		if not note in fumen_part: continue
		if fumen_part[note][0] > min_ms_time: continue

		# 赋delta_time
		var delta_time:float
		if which==2: delta_time = fl_current - fumen_part[note][0]
		else: delta_time = fr_current - fumen_part[note][0]

		# 进行判定操作
		if delta_time >= -ideal and delta_time <= ideal:
			call_deferred(\"board_update\", fumen_part[note].pop_back(), MODE.IDEAL, 0)
			judge_log[which][note] = fumen_part[note].append_array( [\"IDEAL\", delta_time ] )
			fumen_part.erase(note)
			break

func fumen_detect_tap(fumen_part:Dictionary, tap_ms_time:float, min_ms_time:int, lpos:float, rpos:float):

	for note in fumen_part.keys():

		# 保证只有位置内最早的Note被判定
		if not note in fumen_part: continue
		if fumen_part[note][1]<lpos or fumen_part[note][1]>rpos: continue
		if fumen_part[note][0] > min_ms_time: continue

		# 赋delta_time
		var delta_time:float = tap_ms_time - fumen_part[note][0]

		# 无视判定
		if delta_time <= -miss: break

		# Miss Early判定
		elif delta_time < -good:
			call_deferred(\"board_update\",fumen_part[note].pop_back(),MODE.MISS_EARLY,fumen_part[note][1])
			judge_log[0][note] = fumen_part[note].append_array( [\"MISS_EARLY\", delta_time ] )
			fumen_part.erase(note)
			continue

		# Good Early判定
		elif delta_time < -ideal and delta_time >= -good:
			call_deferred(\"board_update\",fumen_part[note].pop_back(),MODE.GOOD_EARLY,fumen_part[note][1])
			judge_log[0][note] = fumen_part[note].append_array( [\"GOOD_EARLY\", delta_time ] )
			fumen_part.erase(note)
			continue

		# ideal Tap判定（两段）
		elif delta_time >= -ideal_tap and delta_time <= ideal_tap:
			if delta_time >= -ideal30 and delta_time <= ideal30:
				call_deferred(\"board_update\",fumen_part[note].pop_back(),MODE.IDEAL30,fumen_part[note][1])
			else:
				call_deferred(\"board_update\",fumen_part[note].pop_back(),MODE.IDEAL,fumen_part[note][1])
			judge_log[0][note] = fumen_part[note].append_array( [\"IDEAL\", delta_time ] )
			fumen_part.erase(note)
			continue

		# Good Late判定
		# elif delta_time > ideal_tap and delta_time <= good:
		else:
			call_deferred(\"board_update\",fumen_part[note].pop_back(),MODE.GOOD_LATE,fumen_part[note][1])
			judge_log[0][note] = fumen_part[note].append_array( [\"GOOD_LATE\", delta_time ] )
			fumen_part.erase(note)
			continue




######## BOARD ########




# 更新Score和Combo
enum MODE {IDEAL30=0, IDEAL=1, GOOD_EARLY=2, GOOD_LATE=3, MISS_EARLY=4, MISS_LATE=5}
func board_update(object, mode:MODE, pos:int=0):

	# 数值更新、光效显示
	if mode==0:
		object.hit()
		ideal_count += 1
		current_combo +=1

		if pos>0 and pos<10:
			var new_light = LisicLight.instantiate()
			new_light.init(0,pos)
			$PanelLayer.add_child(new_light)

	elif mode==1:
		object.hit()
		ideal_count += 1
		current_combo +=1

		if pos>0 and pos<10:
			var new_light = LisicLight.instantiate()
			new_light.init(1,pos)
			$PanelLayer.add_child(new_light)

	elif mode==2:
		object.hit()
		good_count += 1
		current_combo += 1

		if pos>0 and pos<10:
			var new_light = LisicLight.instantiate()
			new_light.init(2,pos)
			$PanelLayer.add_child(new_light)

	elif mode==3:
		object.hit()
		good_count += 1
		current_combo += 1

		if pos>0 and pos<10:
			var new_light = LisicLight.instantiate()
			new_light.init(3,pos)
			$PanelLayer.add_child(new_light)

	elif mode==4:
		object.miss()
		miss_count += 1
		current_combo = 0

		if pos>0 and pos<10:
			var new_light = LisicLight.instantiate()
			new_light.init(4,pos)
			$PanelLayer.add_child(new_light)

	elif mode==5:
		object.queue_free()
		miss_count += 1
		current_combo = 0

	if current_combo > max_combo:
		max_combo = current_combo

	# Combo显示更新
	if miss_count == 0:
		if good_count == 0: $OverLayer2/Combo.text = \"[center][color=#ffff45f7]%d\\n[b]Combo[/b][/color][/center]\" % current_combo
		else: $OverLayer2/Combo.text = \"[center][color=#45fffdf7]%d\\n[b]Combo[/b][/color][/center]\" % current_combo
	else: $OverLayer2/Combo.text = \"[center][color=#f7f7f7f7]%d\\n[b]Combo[/b][/color][/center]\" % current_combo

	# 更新Score
	score = 1000000*(ideal_count + 0.5*good_count)/fumen[\"Statistics\"][\"Num\"] + max_combo
	$OverLayer2/Score.text = \"[color=#f7f7f7f7]%07d\\n[b]Score[/b][/color]\" % score


func fumen_get_mintime(fumen_part:Dictionary):
	var mintime:int = 9223372036854775806
	for note in fumen_part:
		if fumen_part[note][0] < mintime: mintime = fumen_part[note][0]
	return mintime

func fumen_get_mintime_dtap(fumen_part:Dictionary, lpos:float, rpos:float):
	var mintime:int = 9223372036854775806
	for note in fumen_part:
		if fumen_part[note][1] < lpos or fumen_part[note][1] > rpos: continue
		if fumen_part[note][0] < mintime: mintime = fumen_part[note][0]
	return mintime




######## BASIS ########




# 初始化
func init(song:String, chart:String, jacket_texture:Texture2D, insong:bool = false):
	$AudioStreamPlayer.stream = IO.get_stream(song, insong)
	fumen = IO.get_chart(song, chart, insong)
	$OverLayer2/JacketPreview.texture = jacket_texture
	$OverLayer2/JacketPreview.scale.x = 88 / jacket_texture.get_size().x
	$OverLayer2/JacketPreview.scale.y = 88 / jacket_texture.get_size().y
	$OverLayer2/ChartInfo.text = \"[right][color=#f7f7f7f7]%s\\n[b]%s[/b][/color][/right]\" % [song, chart]
	set_process(false)
	set_physics_process(false)
	set_process_input(false)

# 进入时处理
func entertree():
	# 资源加载
	var background = get_tree().get_root().get_node_or_null(\"Select/Background\")
	if background != null: $Background.add_child( background.duplicate(8) )
	if $AudioStreamPlayer.stream == null:
		Notice.display(\"Failed to Decode Audio File.\")
		quit()
	if fumen == null:
		######## ENCRYPTED CHART ########
		######## ENCRYPTED CHART ########
		if fumen == null: quit()

	# 基本配置
	Notice.InDynamic = true
	Engine.set_target_fps(200)
	ProjectSettings.set_setting(\"input_devices/pointing/emulate_mouse_from_touch\", false)
	ProjectSettings.set_setting(\"application/run/low_processor_mode_sleep_usec\", 1000)

	# 获取音频长度
	length = $AudioStreamPlayer.stream.get_length()
	@warning_ignore(integer_division)
	length_m = int(length) / 60
	length_s = int(length) % 60

	# DTime表：异常处理
	if not \"Tempos\" in fumen:
		Notice.display(\"Time Error\")
		quit()
		return
	if not fumen[\"Tempos\"] is Array:
		Notice.display(\"Time Error\")
		quit()
		return
	if fumen[\"Tempos\"].size() == 0:
		Notice.display(\"Time Error\")
		quit()
		return

	# DTime表：正常，分情况处理
	if fumen[\"Tempos\"].size() == 1:
		var fttime = fumen[\"Tempos\"][0][1]
		tempos_expand.append( [0, 9223372036854775806, 902/fttime, 0] )
	elif fumen[\"Tempos\"].size() == 2:
		var fttime = fumen[\"Tempos\"][0][1]
		tempos_expand.append( [0, fumen[\"Tempos\"][1][0], 912/fttime, 0] )
		var dtime_base:float = 902/fttime * (tempos_expand[0][1]-tempos_expand[0][0])
		fttime = fumen[\"Tempos\"][1][1]
		tempos_expand.append( [fumen[\"Tempos\"][1][0], 9223372036854775806, 902/fttime, dtime_base] )
	else:
		var fttime = fumen[\"Tempos\"][0][1]
		tempos_expand.append( [0, fumen[\"Tempos\"][1][0], 902/fttime, 0] )
		var dtime_base:float = 0
		for i in range(1, fumen[\"Tempos\"].size()-1 ):
			fttime = fumen[\"Tempos\"][i][1]
			dtime_base += 902/fttime * (tempos_expand[i-1][1]-tempos_expand[i-1][0])
			tempos_expand.append( [fumen[\"Tempos\"][i][0], fumen[\"Tempos\"][i+1][0], 902/fttime, dtime_base] )
		fttime = fumen[\"Tempos\"][-1][1]
		dtime_base += 902/fttime * (tempos_expand[-1][1]-tempos_expand[-1][0])
		tempos_expand.append( [tempos_expand[-1][1], 9223372036854775806, 902/fttime, dtime_base] )

	# 更新：智能实例化
	if smart_instantiating:
		if fumen[\"Statistics\"][\"Num\"]<1000:
			phy = 25 * instance_ratio
			ins_step = 1000 * instance_ratio
		else:
			phy = 25 * (  int(fumen[\"Statistics\"][\"Num\"]) % 1000  ) * instance_ratio
			ins_step = phy * 40

	# 初次实例化
	fumen_instantiate(0)

	# 开始
	init_time = Time.get_ticks_usec() + 1000000
	if IO.OFS2: await get_tree().create_timer(1+IO.Save[\"OFS2\"]).timeout
	else: await get_tree().create_timer(1+IO.Save[\"OFS1\"]).timeout
	$AudioStreamPlayer.play()

	set_process(true)
	set_physics_process(true)
	set_process_input(true)

# DTime转换方法
func get_dtime(source_time_ms:float):
	for i in tempos_expand:
		if i[1]>source_time_ms: return ( speed*(    (source_time_ms-i[0]) * i[2] + i[3]    ) )


# 每帧更新
func _process(_delta):

	# 计算Time
#	current_time = Time.get_ticks_usec() - init_time + 1000000*(AudioServer.get_time_since_last_mix() - AudioServer.get_output_latency())
	# 可以减少抖动么？
	current_time = Time.get_ticks_usec() - init_time - 1000000*(AudioServer.get_output_latency())

	# 滚动画布
	var dtime:float = get_dtime( current_time/1000 )
	$DownSide.offset.x = IOC - 800
	$DownSide.offset.y = dtime + 1092
	$LSide.offset.x = - 0.7*dtime + IOC - 750.25
	$RSide.offset.x = 0.7*dtime + IOC + 750.25
	$LSide.offset.y = - 0.7*dtime + 265.75
	$RSide.offset.y = $LSide.offset.y


# 低速更新（实验性）
func _physics_process(_delta):

	# 实例化检测
	ins_ticks += 1
	@warning_ignore(integer_division)
	if ins_ticks % phy == 0: fumen_instantiate( ins_ticks * ins_step / phy )

	# 回收判定：计算时间
	f_current = ( Time.get_ticks_usec() - init_time - 1000000*AudioServer.get_output_latency() ) / 1000

	# 回收判定：分配回收判定任务
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"Taps\"], 0, false) , true)
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"Catches\"], 1, Notice.OnScreenFingers != 0 ) , true)
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"LTaps\"], 2, false) , true)
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"LCatches\"], 3, %LButton.is_pressed() ) , true)
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"RTaps\"], 4, false) , true)
	WorkerThreadPool.add_task( fumen_detect.bind(ins[\"RCatches\"], 5, %RButton.is_pressed() ) , true)

	# 更新Note状态
	get_tree().call_group(\"LisicNote\", \"detect\", get_dtime( f_current ))

	# 更新时间提示
	var audio_pos = $AudioStreamPlayer.get_playback_position()
	@warning_ignore(integer_division)
	var audio_pos_m = int(audio_pos) / 60
	var audio_pos_s = int(audio_pos) % 60
	%Progress.text = \"%d:%02d · %d:%02d\" % [audio_pos_m,audio_pos_s,length_m,length_s]


# 退出
func quit():
	ProjectSettings.set_setting(\"input_devices/pointing/emulate_mouse_from_touch\", true)
	ProjectSettings.set_setting(\"application/run/low_processor_mode_sleep_usec\", 6900)
	get_tree().get_root().get_node(\"Select\").process_mode = 0
	$AudioStreamPlayer.stop()
	Notice.transition()
	Notice.InDynamic = false
	IO.InChart = false
	get_tree().create_timer(0.25).timeout.connect(queue_free)

# 退出按钮
func _on_quit_button_down():
	await get_tree().create_timer(0.75).timeout
	if not $OverLayer2/Quit.is_pressed(): return
	# 更新：退出时杂项
	set_process(false)
	set_physics_process(false)
	set_process_input(false)
	quit()

# OFSMinus按钮
func _on_ofs_minus_button_up():
	if IO.OFS2:
		if IO.Save[\"OFS2\"] < -1:
			Notice.display(\"Latency Limit Reached.\")
			return
		IO.Save[\"OFS2\"] -= 0.01
		IO.save_update()
		var new_audio_pos = $AudioStreamPlayer.get_playback_position()
		if new_audio_pos-0.01 < 0: return
		$AudioStreamPlayer.stream_paused = true
		$AudioStreamPlayer.seek(new_audio_pos-0.01)
		$AudioStreamPlayer.stream_paused = false
		Notice.display( \"BT Latency: %.2f\" % IO.Save[\"OFS2\"] )
		return
	if IO.Save[\"OFS1\"] < -1:
		Notice.display(\"Latency Limit Reached.\")
		return
	IO.Save[\"OFS1\"] -= 0.01
	IO.save_update()
	var new_audio_pos = $AudioStreamPlayer.get_playback_position()
	if new_audio_pos-0.01 < 0: return
	$AudioStreamPlayer.stream_paused = true
	$AudioStreamPlayer.seek(new_audio_pos-0.01)
	$AudioStreamPlayer.stream_paused = false
	Notice.display( \"OF Latency: %.2f\" % IO.Save[\"OFS1\"] )
	return

# OFSPlus按钮
func _on_ofs_plus_button_up():
	if IO.OFS2:
		if IO.Save[\"OFS2\"] > 1:
			Notice.display(\"Latency Limit Reached.\")
			return
		IO.Save[\"OFS2\"] += 0.01
		IO.save_update()
		var new_audio_pos = $AudioStreamPlayer.get_playback_position()
		if new_audio_pos+0.01 > length: return
		$AudioStreamPlayer.stream_paused = true
		$AudioStreamPlayer.seek(new_audio_pos+0.01)
		$AudioStreamPlayer.stream_paused = false
		Notice.display( \"BT Latency: %.2f\" % IO.Save[\"OFS2\"] )
		return
	if IO.Save[\"OFS1\"] > 1:
		Notice.display(\"Latency Limit Reached.\")
		return
	IO.Save[\"OFS1\"] += 0.01
	IO.save_update()
	var new_audio_pos = $AudioStreamPlayer.get_playback_position()
	if new_audio_pos+0.01 > length: return
	$AudioStreamPlayer.stream_paused = true
	$AudioStreamPlayer.seek(new_audio_pos+0.01)
	$AudioStreamPlayer.stream_paused = false
	Notice.display( \"OF Latency: %.2f\" % IO.Save[\"OFS1\"] )
	return

# 更新：将物件位置类的内容分离出来
func _on_control_resized():
	IOC = $Control.get_rect().end.x / 2
	$Background/Background.position.x = IOC
	$Background/Background.scale.x = IOC / 1280
	$Background/Background.scale.y = $Background.scale.x
	$OverLayer2/Combo.position.x = IOC - 100
	$OverLayer2/ChartInfo.position.x = 2*IOC - 1156
	$OverLayer2/JacketPreview.position.x = 2*IOC - 80
	$OverLayer2/Quit.position.x = 2*IOC - 124
	$PanelLayer.offset.x = IOC - 960
	%Progress.position.x = IOC - 100

# 更新：L/R Tap判定
func _on_l_button_pressed():
	WorkerThreadPool.add_task(
		fumen_detect_tap_lr.bind(  ins[\"LTaps\"], 2, fumen_get_mintime(ins[\"LTaps\"])  )
		, true)
func _on_r_button_pressed():
	WorkerThreadPool.add_task(
		fumen_detect_tap_lr.bind(  ins[\"RTaps\"], 4, fumen_get_mintime(ins[\"RTaps\"])  )
		, true)

# 更新：区域锁检测
func block_detect(pos:float):
	if judge_block.is_empty():
		return false
	for array in judge_block:
		if not array is Array: return false
		if pos>array[0] and pos<array[1]: return true
	return false

# 更新：一般Tap判定
@export var threaded_for_taps:bool = true
@export_range(1,2) var zone:float = 1.0
func _input(event):

	# 剔除无关动作
	if terminated: return
	if not event is InputEventScreenTouch: return
	if event.position.y <= 612: return

	# 获取时间
	var tap_ms_time:float = ( Time.get_ticks_usec() - init_time - 1000000*AudioServer.get_output_latency() ) / 1000

	# 按下行为
	if event.pressed:

		# 计算击中范围
		if event.position.x < IOC-800 or event.position.x > IOC+800: return
		var pos:float = (event.position.x - IOC + 960) / 160 - 1

		# 区域锁判定
		if block_detect(pos): return

		# 调用击中方法
		if threaded_for_taps:
			WorkerThreadPool.add_task(
				fumen_detect_tap.bind(ins[\"Taps\"], tap_ms_time,
					fumen_get_mintime_dtap(ins[\"Taps\"], pos-zone, pos+zone),
					pos-zone, pos+zone)
			, true)
		else:
			fumen_detect_tap(ins[\"Taps\"], tap_ms_time,
					fumen_get_mintime_dtap(ins[\"Taps\"], pos-zone, pos+zone),
					pos-zone, pos+zone)

		# 区域锁新增
		judge_block.append( [pos-0.55,pos+0.55] )
		return

	# 松手行为
	judge_block.clear()


# 更新：结算界面
func result_tween(index:float):  #index范围0.0 - 5.5

	# 主体Tween
	if index<=1.0:
		$OverLayer2/Result.self_modulate = Color(1.0,1.0,1.0, index )
		$OverLayer2/Result/ideal.self_modulate = Color(1.0,1.0,1.0, index )
		$OverLayer2/Result/ideal.text = \"[center]%d\\n[b]ideal\\n[color=#c6c6c6]×1[/color][/b][/center]\" % int(ideal_count * index)
	elif index>1.0 and index<=2.0:
		$OverLayer2/Result/Good.self_modulate = Color(1.0,1.0,1.0, index-1.0 )
		$OverLayer2/Result/Good.text = \"[center]%d\\n[b]Good\\n[color=#c6c6c6]×0.5[/color][/b][/center]\" % int( good_count * (index-1.0) )
	elif index>2.0 and index<=3.0:
		$OverLayer2/Result/Miss.self_modulate = Color(1.0,1.0,1.0, index-2.0 )
		$OverLayer2/Result/Miss.text = \"[center]%d\\n[b]Miss\\n[color=#c6c6c6]×0[/color][/b][/center]\" % int( miss_count * (index-2.0) )
	elif index>3.0 and index<=4.0:
		$OverLayer2/Result/MaxCombo.self_modulate = Color(1.0,1.0,1.0, index-3.0 )
		$OverLayer2/Result/MaxCombo.text = \"[center]%d\\n[b]MaxCombo\\n[color=#c6c6c6]+1[/color][/b][/center]\" % int( max_combo * (index-3.0) )
	elif index>4.0 and index<=5.0:
		$OverLayer2/Result/Score.self_modulate = Color(1.0,1.0,1.0, index-4.0 )
		$OverLayer2/Result/Score.text = \"[center]%d\\n[b]Score\\n[color=#c6c6c6]———[/color][/b][/center]\" % int( score * (index-4.0) )
	else:
		$OverLayer2/Result/Evaluation.self_modulate = Color(1.0,1.0,1.0, (index-5.0)*1.46 )
		$OverLayer2/Result/Evaluation.scale.y = 12.0 - index*2
		$OverLayer2/Result/Evaluation.scale.x = 12.0 - index*2

	# 针对Plus和Equal的Tween
	if index>=0.8 and index<=1.2:
		$OverLayer2/Result/Plus1.self_modulate = Color(1.0,1.0,1.0, (index-0.8)*2.5 )
		$OverLayer2/Result/Plus1.scale.y = 3.0 - (index-0.8)*5
		$OverLayer2/Result/Plus1.scale.x = 3.0 - (index-0.8)*5
	elif index>=1.8 and index<=2.2:
		$OverLayer2/Result/Plus2.self_modulate = Color(1.0,1.0,1.0, (index-1.8)*2.5 )
		$OverLayer2/Result/Plus2.scale.y = 3.0 - (index-1.8)*5
		$OverLayer2/Result/Plus2.scale.x = 3.0 - (index-1.8)*5
	elif index>=2.8 and index<=3.2:
		$OverLayer2/Result/Plus3.self_modulate = Color(1.0,1.0,1.0, (index-2.8)*2.5 )
		$OverLayer2/Result/Plus3.scale.y = 3.0 - (index-2.8)*5
		$OverLayer2/Result/Plus3.scale.x = 3.0 - (index-2.8)*5
	elif index>=3.8 and index<=4.2:
		$OverLayer2/Result/Equal.self_modulate = Color(1.0,1.0,1.0, (index-3.8)*2.5 )
		$OverLayer2/Result/Equal.scale.y = 3.0 - (index-3.8)*5
		$OverLayer2/Result/Equal.scale.x = 3.0 - (index-3.8)*5

	# Bug Fix
	if index>=1.0 and index<1.2:
		$OverLayer2/Result/ideal.text = \"[center]%d\\n[b]ideal\\n[color=#c6c6c6]×1[/color][/b][/center]\" % ideal_count
	elif index>=2.0 and index<2.2:
		$OverLayer2/Result/Good.text = \"[center]%d\\n[b]Good\\n[color=#c6c6c6]×0.5[/color][/b][/center]\" % good_count
	elif index>=3.0 and index<3.2:
		$OverLayer2/Result/Miss.text = \"[center]%d\\n[b]Miss\\n[color=#c6c6c6]×0[/color][/b][/center]\" % miss_count
	elif index>=4.0 and index<4.2:
		$OverLayer2/Result/MaxCombo.text = \"[center]%d\\n[b]MaxCombo\\n[color=#c6c6c6]+1[/color][/b][/center]\" % max_combo
	elif index>=5.0 and index<5.2:
		$OverLayer2/Result/Score.text = \"[center]%d\\n[b]Score\\n[color=#c6c6c6]———[/color][/b][/center]\" % score


func _on_audio_stream_player_finished():
	terminated = true
	set_physics_process(false)

	if IO.ChartInvalid:

		# 基础设置
		$OverLayer2/Combo.queue_free()
		$OverLayer2/Score.text = \"[color=#000000]%s\\n[b]Player[/b][/color]\" % IO.Save[\"Player\"]
		$OverLayer2/ChartInfo.self_modulate = Color(0,0,0)
		%Progress.position.y -= 960
		%Progress.self_modulate = Color(0,0,0)
		%Progress.text = \"CHART INVALID\"

		# 填写Evaluation文字
		var tex1:String
		var tex2:String
		var maxscore:float = 1000000.0 + fumen[\"Statistics\"][\"Num\"]
		randomize()
		var ofs:float = randf_range( -370.0,370.0 )
		randomize()
		var ofs_deg:float = deg2rad( randf_range(-37.0, 37.0) )

		if miss_count == 0:
			if good_count == 0: tex1 = \"[color=#ff9d00]MaxScore[/color]\"
			else: tex1 = \"[color=#00aaff]FullCombo[/color]\"
		else: tex1 = \"[color=#000000]Completed[/color]\"

		if score/maxscore <= 0.5:
			tex2 = \"[color=#000000]C[/color]\"
		elif score/maxscore > 0.5 and score/maxscore <= 0.6:
			tex2 = \"[color=#000000]C+[/color]\"
		elif score/maxscore > 0.6 and score/maxscore <= 0.7:
			tex2 = \"[color=#ff0000]B[/color]\"
		elif score/maxscore > 0.7 and score/maxscore <= 0.8:
			tex2 = \"[color=#ff0000]B+[/color]\"
		elif score/maxscore > 0.8 and score/maxscore <= 0.85:
			tex2 = \"[color=#a245ff]A[/color]\"
		elif score/maxscore > 0.85 and score/maxscore <= 0.9:
			tex2 = \"[color=#a245ff]A+[/color]\"
		elif score/maxscore > 0.9 and score/maxscore <= 0.95:
			tex2 = \"[color=#ff7e45]S[/color]\"
		elif score/maxscore > 0.95 and score/maxscore < 1.0:
			tex2 = \"[color=#ff7e45]S+[/color]\"
		else: tex2 = \"[color=#00aaff]☆[/color]\"

		$OverLayer2/Result/Evaluation.text = \"[center]%s.[b]%s[/b][/center]\" % [tex1,tex2]
		$OverLayer2/Result/Evaluation.offset_left += ofs
		$OverLayer2/Result/Evaluation.offset_right += ofs
		$OverLayer2/Result/Evaluation.rotation = ofs_deg

		# 开始Tween
		$OverLayer2/Result.visible = true
		var tween = create_tween()
		tween.stop()
		tween.set_trans(Tween.TRANS_LINEAR)
		tween.tween_method(result_tween, 0.0, 5.5, 5.0)
		tween.play()

		return

	Notice.display(\"Result System Coming Soon.\")
	set_process(false)
	set_process_input(false)
	quit()
"

[sub_resource type="GDScript" id="GDScript_gypai"]
resource_name = "PanelLayer"
script/source = "extends CanvasLayer

@export var ideal30:Texture2D
@export var ideal:Texture2D
@export var good_early:Texture2D
@export var good_late:Texture2D
@export var miss_early:Texture2D

func _process(_delta):
	if Notice.OnScreenFingers == 0 or %Quit.is_pressed() or %OFSMinus.is_pressed() or %OFSPlus.is_pressed():
		$Panel.modulate = Color(0.9, 0.9, 0.9, 0.51)
		return
	$Panel.modulate = Color(0.9, 0.9, 0.9, 0.73)

var Ltween:Tween
func tween_for_lhits(index:float): $LHit.self_modulate = Color(1.0,1.0,1.0, index )

var Rtween:Tween
func tween_for_rhits(index:float): $RHit.self_modulate = Color(1.0,1.0,1.0, index )

func _on_l_button_pressed():
	Ltween = $LHit.create_tween()
	Ltween.stop()
	Ltween.set_trans(0)
	Ltween.tween_method(tween_for_lhits, 0.0, 1.0, 0.05)
	Ltween.play()
func _on_l_button_released():
	Ltween = $LHit.create_tween()
	Ltween.stop()
	Ltween.set_trans(0)
	Ltween.tween_method(tween_for_lhits, 1.0, 0.0, 0.15)
	Ltween.play()
func _on_r_button_pressed():
	Rtween = $RHit.create_tween()
	Rtween.stop()
	Rtween.set_trans(0)
	Rtween.tween_method(tween_for_rhits, 0.0, 1.0, 0.05)
	Rtween.play()
func _on_r_button_released():
	Rtween = $RHit.create_tween()
	Rtween.stop()
	Rtween.set_trans(0)
	Rtween.tween_method(tween_for_rhits, 1.0, 0.0, 0.15)
	Rtween.play()
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_64eix"]
bg_color = Color(0, 0, 0, 0)
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12
corner_detail = 12

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_wnnc3"]
bg_color = Color(0.490196, 0.694118, 1, 0.184314)
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12
corner_detail = 12

[sub_resource type="RectangleShape2D" id="RectangleShape2D_8c2dq"]
size = Vector2(954, 572)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_7h1ov"]
bg_color = Color(1, 0.490196, 0.498039, 0.184314)
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12
corner_detail = 12

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_foulh"]
bg_color = Color(0, 0, 0, 0.501961)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.968627, 0.968627, 0.968627, 0.368627)
corner_radius_top_left = 32
corner_radius_top_right = 32
corner_radius_bottom_right = 32
corner_radius_bottom_left = 32
corner_detail = 20
expand_margin_left = 1.0
expand_margin_top = 1.0
expand_margin_right = 1.0
expand_margin_bottom = 1.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_643mo"]
bg_color = Color(0, 0, 0, 0.729412)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.968627, 0.968627, 0.968627, 0.368627)
corner_radius_top_left = 32
corner_radius_top_right = 32
corner_radius_bottom_right = 32
corner_radius_bottom_left = 32
corner_detail = 20
expand_margin_left = 1.0
expand_margin_top = 1.0
expand_margin_right = 1.0
expand_margin_bottom = 1.0

[sub_resource type="GDScript" id="GDScript_id2rn"]
resource_name = "DownSide"
script/source = "extends CanvasLayer

@export var tap:Texture2D
@export var catch:Texture2D
"

[sub_resource type="GDScript" id="GDScript_ofsuf"]
resource_name = "LSide"
script/source = "extends CanvasLayer

@export var tap:Texture2D
@export var catch:Texture2D
"

[sub_resource type="GDScript" id="GDScript_ec6ix"]
resource_name = "RSide"
script/source = "extends CanvasLayer

@export var tap:Texture2D
@export var catch:Texture2D
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_8pd73"]
bg_color = Color(0.960784, 0.960784, 0.960784, 0.960784)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e5s2p"]
shader = ExtResource("9_sq2y1")
corner_radius = 136.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_jcmf4"]
bg_color = Color(0, 0, 0, 0.501961)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.968627, 0.968627, 0.968627, 0.368627)
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12
corner_detail = 12
expand_margin_left = 1.0
expand_margin_top = 1.0
expand_margin_right = 1.0
expand_margin_bottom = 1.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_82ijy"]
bg_color = Color(0, 0, 0, 0.729412)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.968627, 0.968627, 0.968627, 0.368627)
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12
corner_detail = 12
expand_margin_left = 1.0
expand_margin_top = 1.0
expand_margin_right = 1.0
expand_margin_bottom = 1.0

[node name="Lisic" type="Node"]
process_mode = 3
script = SubResource("GDScript_0xc23")
speed = 2.73
LisicNote = ExtResource("1_6rjc2")
LisicLight = ExtResource("2_fj2m2")
zone = 1.137

[node name="Background" type="CanvasLayer" parent="."]

[node name="PanelLayer" type="CanvasLayer" parent="."]
layer = 2
script = SubResource("GDScript_gypai")
ideal30 = ExtResource("8_h0pvs")
ideal = ExtResource("9_1jlk0")
good_early = ExtResource("10_ey0dw")
good_late = ExtResource("11_ckssv")
miss_early = ExtResource("12_ksq1k")

[node name="Panel" type="Panel" parent="PanelLayer"]
modulate = Color(0.901961, 0.901961, 0.901961, 0.368627)
offset_left = 80.0
offset_top = -668.0
offset_right = 1840.0
offset_bottom = 1092.0
theme_override_styles/panel = SubResource("StyleBoxFlat_64eix")

[node name="LHit" type="Panel" parent="PanelLayer"]
self_modulate = Color(1, 1, 1, 0)
top_level = true
offset_left = 112.0
offset_top = 168.0
offset_right = 944.0
offset_bottom = 580.0
auto_translate = false
theme_override_styles/panel = SubResource("StyleBoxFlat_wnnc3")

[node name="LButton" type="TouchScreenButton" parent="PanelLayer"]
unique_name_in_owner = true
position = Vector2(478, 324)
shape = SubResource("RectangleShape2D_8c2dq")
passby_press = true

[node name="RHit" type="Panel" parent="PanelLayer"]
self_modulate = Color(1, 1, 1, 0)
top_level = true
offset_left = 976.0
offset_top = 168.0
offset_right = 1808.0
offset_bottom = 580.0
auto_translate = false
theme_override_styles/panel = SubResource("StyleBoxFlat_7h1ov")

[node name="RButton" type="TouchScreenButton" parent="PanelLayer"]
unique_name_in_owner = true
position = Vector2(1442, 324)
shape = SubResource("RectangleShape2D_8c2dq")
passby_press = true

[node name="LPanel" type="Sprite2D" parent="PanelLayer"]
top_level = true
position = Vector2(209.75, 265.75)
scale = Vector2(1.5, 1.5)
texture = ExtResource("8_xntdr")

[node name="RPanel" type="Sprite2D" parent="PanelLayer"]
top_level = true
position = Vector2(1710.25, 265.75)
scale = Vector2(1.5, 1.5)
texture = ExtResource("9_o4qdq")

[node name="OFSMinus" type="Button" parent="PanelLayer"]
unique_name_in_owner = true
offset_left = 32.0
offset_top = 1116.0
offset_right = 96.0
offset_bottom = 1180.0
focus_mode = 0
theme_override_colors/font_color = Color(0.901961, 0.901961, 0.901961, 0.968627)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 36
theme_override_styles/normal = SubResource("StyleBoxFlat_foulh")
theme_override_styles/hover = SubResource("StyleBoxFlat_foulh")
theme_override_styles/pressed = SubResource("StyleBoxFlat_643mo")
text = "←"

[node name="ButtonToTSB" type="TouchScreenButton" parent="PanelLayer/OFSMinus"]
script = ExtResource("16_0bk3r")
optimized_for_round_button = true

[node name="OFSPlus" type="Button" parent="PanelLayer"]
unique_name_in_owner = true
offset_left = 1824.0
offset_top = 1116.0
offset_right = 1888.0
offset_bottom = 1180.0
focus_mode = 0
theme_override_colors/font_color = Color(0.901961, 0.901961, 0.901961, 0.968627)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 36
theme_override_styles/normal = SubResource("StyleBoxFlat_foulh")
theme_override_styles/hover = SubResource("StyleBoxFlat_foulh")
theme_override_styles/pressed = SubResource("StyleBoxFlat_643mo")
text = "→"

[node name="ButtonToTSB" type="TouchScreenButton" parent="PanelLayer/OFSPlus"]
script = ExtResource("16_0bk3r")
optimized_for_round_button = true

[node name="DownSide" type="CanvasLayer" parent="."]
layer = 3
script = SubResource("GDScript_id2rn")
tap = ExtResource("11_jkv75")
catch = ExtResource("12_lnvwq")

[node name="LSide" type="CanvasLayer" parent="."]
layer = 4
script = SubResource("GDScript_ofsuf")
tap = ExtResource("13_c5ic0")
catch = ExtResource("14_rbbgr")

[node name="RSide" type="CanvasLayer" parent="."]
layer = 4
script = SubResource("GDScript_ec6ix")
tap = ExtResource("15_du4rs")
catch = ExtResource("16_bf8mi")

[node name="OverLayer2" type="CanvasLayer" parent="."]
layer = 5

[node name="Result" type="Panel" parent="OverLayer2"]
visible = false
self_modulate = Color(1, 1, 1, 0)
anchor_right = 1.0
anchor_bottom = 1.0
theme_override_styles/panel = SubResource("StyleBoxFlat_8pd73")

[node name="ideal" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -800.0
offset_top = -70.0
offset_right = -480.0
offset_bottom = 70.0
rotation = -2.74923e-05
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 56
theme_override_font_sizes/bold_font_size = 22
bbcode_enabled = true
text = "[center]0
[b]ideal
[color=#c6c6c6]×1[/color][/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Plus1" type="Label" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -528.0
offset_top = -60.0
offset_right = -432.0
offset_bottom = 30.0
grow_horizontal = 2
grow_vertical = 2
auto_translate = false
theme_override_colors/font_color = Color(0.729412, 0.729412, 0.729412, 1)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 72
text = "+"
horizontal_alignment = 1
vertical_alignment = 1
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Good" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -480.0
offset_top = -70.0
offset_right = -160.0
offset_bottom = 70.0
rotation = -2.74923e-05
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 56
theme_override_font_sizes/bold_font_size = 22
bbcode_enabled = true
text = "[center]0
[b]Good
[color=#c6c6c6]×0.5[/color][/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Plus2" type="Label" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -208.0
offset_top = -64.5
offset_right = -112.0
offset_bottom = 34.5
grow_horizontal = 2
grow_vertical = 2
auto_translate = false
theme_override_colors/font_color = Color(0.729412, 0.729412, 0.729412, 1)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 72
text = "+"
horizontal_alignment = 1
vertical_alignment = 1
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Miss" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -160.0
offset_top = -70.0
offset_right = 160.0
offset_bottom = 70.0
rotation = -2.74923e-05
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 56
theme_override_font_sizes/bold_font_size = 22
bbcode_enabled = true
text = "[center]0
[b]Miss
[color=#c6c6c6]×0[/color][/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Plus3" type="Label" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 112.0
offset_top = -64.5
offset_right = 208.0
offset_bottom = 34.5
grow_horizontal = 2
grow_vertical = 2
auto_translate = false
theme_override_colors/font_color = Color(0.729412, 0.729412, 0.729412, 1)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 72
text = "+"
horizontal_alignment = 1
vertical_alignment = 1
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="MaxCombo" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 160.0
offset_top = -70.0
offset_right = 480.0
offset_bottom = 70.0
rotation = -2.74923e-05
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 56
theme_override_font_sizes/bold_font_size = 22
bbcode_enabled = true
text = "[center]0
[b]MaxCombo
[color=#c6c6c6]+1[/color][/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Equal" type="Label" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 432.0
offset_top = -64.0
offset_right = 528.0
offset_bottom = 34.0
grow_horizontal = 2
grow_vertical = 2
auto_translate = false
theme_override_colors/font_color = Color(0.729412, 0.729412, 0.729412, 1)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 80
text = "◇"
horizontal_alignment = 1
vertical_alignment = 1
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Score" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 480.0
offset_top = -70.0
offset_right = 800.0
offset_bottom = 70.0
rotation = -2.74923e-05
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 56
theme_override_font_sizes/bold_font_size = 22
bbcode_enabled = true
text = "[center]0
[b]Score
[color=#c6c6c6]———[/color][/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Evaluation" type="RichTextLabel" parent="OverLayer2/Result"]
self_modulate = Color(1, 1, 1, 0)
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -240.0
offset_top = 160.0
offset_right = 240.0
offset_bottom = 360.0
rotation = 0.174533
auto_translate = false
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_fonts/normal_font = ExtResource("10_sn88k")
theme_override_fonts/bold_font = ExtResource("10_sn88k")
theme_override_font_sizes/normal_font_size = 48
theme_override_font_sizes/bold_font_size = 144
bbcode_enabled = true
text = "[center]Complete.[b]C[/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false
metadata/_edit_layout_mode = 1
metadata/_edit_use_custom_anchors = true

[node name="Score" type="RichTextLabel" parent="OverLayer2"]
offset_left = 156.0
offset_top = 59.0
offset_right = 356.0
offset_bottom = 125.0
rotation = -2.74923e-05
auto_translate = false
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 32
theme_override_font_sizes/bold_font_size = 18
bbcode_enabled = true
text = "0000000
[b]Score[/b]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false

[node name="Combo" type="RichTextLabel" parent="OverLayer2"]
offset_left = 860.0
offset_top = 41.0
offset_right = 1060.0
offset_bottom = 125.0
auto_translate = false
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 48
theme_override_font_sizes/bold_font_size = 18
bbcode_enabled = true
text = "[center]0
[b]Combo[/b][/center]"
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false

[node name="ChartInfo" type="RichTextLabel" parent="OverLayer2"]
offset_left = 764.0
offset_top = 59.0
offset_right = 1764.0
offset_bottom = 125.0
rotation = -2.74923e-05
auto_translate = false
theme_override_fonts/bold_font = ExtResource("8_nhr8l")
theme_override_font_sizes/normal_font_size = 32
theme_override_font_sizes/bold_font_size = 18
bbcode_enabled = true
scroll_active = false
deselect_on_focus_loss_enabled = false
hint_underlined = false
shortcut_keys_enabled = false

[node name="JacketPreview" type="Sprite2D" parent="OverLayer2"]
material = SubResource("ShaderMaterial_e5s2p")
position = Vector2(1840, 92)

[node name="Quit" type="Button" parent="OverLayer2"]
unique_name_in_owner = true
top_level = true
offset_left = 1796.0
offset_top = 48.0
offset_right = 1884.0
offset_bottom = 136.0
auto_translate = false
focus_mode = 0
theme_override_font_sizes/font_size = 48
theme_override_styles/normal = SubResource("StyleBoxFlat_jcmf4")
theme_override_styles/hover = SubResource("StyleBoxFlat_jcmf4")
theme_override_styles/pressed = SubResource("StyleBoxFlat_82ijy")
text = "×"

[node name="ButtonToTSB" type="TouchScreenButton" parent="OverLayer2/Quit"]
script = ExtResource("16_0bk3r")
optimized_for_round_button = true

[node name="Progress" type="Label" parent="OverLayer2"]
unique_name_in_owner = true
top_level = true
offset_left = 860.0
offset_top = 1040.0
offset_right = 1060.0
offset_bottom = 1076.0
theme_override_colors/font_color = Color(1, 1, 1, 0.501961)
theme_override_fonts/font = ExtResource("10_sn88k")
theme_override_font_sizes/font_size = 24
horizontal_alignment = 1
vertical_alignment = 1

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[connection signal="tree_entered" from="." to="." method="entertree"]
[connection signal="pressed" from="PanelLayer/LButton" to="." method="_on_l_button_pressed"]
[connection signal="pressed" from="PanelLayer/LButton" to="PanelLayer" method="_on_l_button_pressed"]
[connection signal="released" from="PanelLayer/LButton" to="PanelLayer" method="_on_l_button_released"]
[connection signal="pressed" from="PanelLayer/RButton" to="." method="_on_r_button_pressed"]
[connection signal="pressed" from="PanelLayer/RButton" to="PanelLayer" method="_on_r_button_pressed"]
[connection signal="released" from="PanelLayer/RButton" to="PanelLayer" method="_on_r_button_released"]
[connection signal="button_up" from="PanelLayer/OFSMinus" to="." method="_on_ofs_minus_button_up"]
[connection signal="button_up" from="PanelLayer/OFSPlus" to="." method="_on_ofs_plus_button_up"]
[connection signal="button_down" from="OverLayer2/Quit" to="." method="_on_quit_button_down"]
[connection signal="finished" from="AudioStreamPlayer" to="." method="_on_audio_stream_player_finished"]
[connection signal="resized" from="Control" to="." method="_on_control_resized"]
